#!/bin/bash

# If running on LC, execute with: .get_histograms.sh LLNL-LC
# Otherwise, if on UM-ARC, run with: .get_histograms.sh
#
# Dependencies:
# - calc_cluster_distance_histograms-mpi.cpp
# - Files generated by get_clusters.sh


##############################3

tag_list=""

# Figure out what frames we have to analyze

for i in `ls training_data_*xyzf`
do
    tag=${i%*.xyzf}
    tag=${tag#*#}
    taglist="${taglist} $tag"
    
done

echo "Compiling the code..."

if [ "$1" != "LLNL-LC" ]] ; then 
    source ~/codes/chimes_lsq-myLLfork/modfiles/UM-ARC.mod 
fi

mpiicc -O3 -o calc_cluster_distance_histograms-mpi calc_cluster_distance_histograms-mpi.cpp

# Generate histograms for all the frames
# Going to break the task into 12 blocks, to get everything done in ~3.5 hrs

echo "Building the submit script and submitting..."

jobs_per_block=10 # How many jobs per block
task=0              # Current job
block=-1            # Current block
prev_block=-2       # Previous block

end=1116


for i in $taglist
do

    tag=${i%*.xyzf}
        tag=${tag#*#}
    
    # Only process requested frames
    if [ $tag -ge $end ] ; then
        break
    fi
    
    # Only run missing jobs
    if [ -e ${tag}-${tag}.4b_clu-s.hist ] ; then
        echo "Skipping: ${tag}-${tag}.*b_clu-s.hist" 
        continue
    fi

    if [ `echo "${task} % ${jobs_per_block}" | bc`  == 0 ] ; then
    
        let block=block+1
        let prev_block=prev_block+1
    
        
        if [ $prev_block -ge 0 ]; then 
        
            echo "  ... Finished writing block ${prev_block} cmd file ... submitting!"
            echo "  with contents:"
            cat run-partition-${prev_block}.cmd
            sbatch run-partition-${prev_block}.cmd
        fi
        
        # Create the .cmd script
        
        rm -f  run-partition-${block}.cmd        
        echo "#!/bin/bash                                                        "  >> run-partition-${block}.cmd
        echo "                                                                   "  >> run-partition-${block}.cmd
        echo "#SBATCH -J block-${block}                                          "  >> run-partition-${block}.cmd
        echo "#SBATCH --nodes 1                                                  "  >> run-partition-${block}.cmd            
        echo "#SBATCH --ntasks-per-node 36                                       "  >> run-partition-${block}.cmd            
        echo "#SBATCH -t 00:30:00                                                "  >> run-partition-${block}.cmd        


        if [ "$1" == "LLNL-LC" ]] ; then 
            echo "#SBATCH -p pdebug                                              "  >> run-partition-${block}.cmd	 
            echo "#SBATCH -A pbronze                                             "  >> run-partition-${block}.cmd	 
        else
            echo "#SBATCH -p standard                                            "  >> run-partition-${block}.cmd	 
            echo "#SBATCH -A rklinds1                                            "  >> run-partition-${block}.cmd	 
        fi

        echo "#SBATCH -V                                                         "  >> run-partition-${block}.cmd
        echo "#SBATCH -o stdoutmsg                                               "  >> run-partition-${block}.cmd         

        if [ "$1" != "LLNL-LC" ]] ; then 
            echo "source /home/rklinds/codes/chimes_lsq-myLLfork/modfiles/UM-ARC.mod "  >> run-partition-${block}.cmd    
        fi
        echo "rm -f run-${block}.log                                             "  >> run-partition-${block}.cmd    
    fi
    
    echo "time srun -n 36 ./calc_cluster_distance_histograms-mpi $i $i s >> run-${block}.log" >> run-partition-${block}.cmd  
    
    let task=task+1


done

echo "  .... Finished writing the last block ${block} cmd file ... submitting!"
echo "  with contents:"
cat run-partition-${block}.cmd
sbatch run-partition-${block}.cmd

    
